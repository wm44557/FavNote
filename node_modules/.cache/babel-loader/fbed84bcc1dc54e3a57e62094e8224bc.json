{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marcinwrzos/Desktop/cra-new/src/components/molecules/Card/Card.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Button from 'components/atoms/Button/Button';\nimport LinkIcon from \"assets/link.svg\";\nimport { connect } from 'react-redux';\nimport { removeItem as removeItemAction } from 'actions';\nconst StyledWrapper = styled.div`\n  min-height: 380px;\n  box-shadow: 0 10px 30px -10px hsla(0,0%,0%,0.1);\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  display: grid;\n  grid-template-rows: 0.25fr 1fr;\n`;\n_c = StyledWrapper;\nconst InnerWrapper = styled.div`\n  position: relative;\n  padding: 17px 30px 10px;\n  background-color: ${({\n  theme,\n  cardType\n}) => cardType ? theme[cardType] : 'white'};\n  :first-of-type{\n  z-index: 999;\n  }\n  \n  ${({\n  flex\n}) => flex && css`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between`};\n`;\n_c2 = InnerWrapper;\nconst DateInfo = styled(Paragraph)`\nmargin: 0 0 5px;\nfont-weight: bold;\nfont-size: ${({\n  theme\n}) => theme.fontSize.xs};\n`;\n_c3 = DateInfo;\nconst StyledHeading = styled(Heading)`\n  margin: 5px 0 0;\n`;\n_c4 = StyledHeading;\nconst SyledAvatar = styled.img`\n  position: absolute;\n  right:25px;\n  top: 25px;\n  height: 86px;\n  width: 86px;\n  border:5px solid ${({\n  theme\n}) => theme.twitters}; \n  border-radius: 50%;\n`;\n_c5 = SyledAvatar;\nconst StyledLinkButton = styled.a`\n  display: block;\n  width: 47px;\n  height: 47px;\n  border-radius: 50px;\n  background: white url(${LinkIcon}) no-repeat;\n  background-size: 60%;\n  background-position: 50%;\n  position: absolute;\n  right:25px;\n  top: 25px;\n  transform: translateY(-15%);\n`;\n_c6 = StyledLinkButton;\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirect: false\n    };\n\n    this.handleCardClick = () => this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    const {\n      redirect\n    } = this.state;\n    const {\n      // eslint-disable-next-line no-shadow,react/prop-types\n      id,\n      cardType,\n      title,\n      created,\n      twitterName,\n      articleUrl,\n      content,\n      removeItem\n    } = this.props;\n\n    if (redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `${cardType}/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      onClick: this.handleCardClick,\n      children: [/*#__PURE__*/_jsxDEV(InnerWrapper, {\n        cardType: cardType,\n        children: [/*#__PURE__*/_jsxDEV(StyledHeading, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateInfo, {\n          children: created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), cardType === 'twitters' && /*#__PURE__*/_jsxDEV(SyledAvatar, {\n          src: `https://avatar.oxro.io/avatar.svg?name=${twitterName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 14\n        }, this), cardType === 'articles' && /*#__PURE__*/_jsxDEV(StyledLinkButton, {\n          src: articleUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InnerWrapper, {\n        flex: true,\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => removeItem(cardType, id),\n          secondary: true,\n          children: \"REMOVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCard.propTypes = {\n  cardType: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  created: PropTypes.string.isRequired,\n  twitterName: PropTypes.string,\n  articleUrl: PropTypes.string,\n  content: PropTypes.string.isRequired,\n  removeItem: PropTypes.func.isRequired\n};\nCard.defaultProps = {\n  cardType: 'notes',\n  twitterName: null,\n  articleUrl: null\n};\n\nconst mapDispatchToProps = dispatch => ({\n  removeItem: (itemType, id) => dispatch(removeItemAction(itemType, id))\n});\n\nexport default connect(null, mapDispatchToProps)(Card);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledWrapper\");\n$RefreshReg$(_c2, \"InnerWrapper\");\n$RefreshReg$(_c3, \"DateInfo\");\n$RefreshReg$(_c4, \"StyledHeading\");\n$RefreshReg$(_c5, \"SyledAvatar\");\n$RefreshReg$(_c6, \"StyledLinkButton\");","map":{"version":3,"sources":["/Users/marcinwrzos/Desktop/cra-new/src/components/molecules/Card/Card.js"],"names":["React","Component","Redirect","PropTypes","styled","css","Paragraph","Heading","Button","connect","removeItem","removeItemAction","StyledWrapper","div","InnerWrapper","theme","cardType","flex","DateInfo","fontSize","xs","StyledHeading","SyledAvatar","img","twitters","StyledLinkButton","a","LinkIcon","Card","state","redirect","handleCardClick","setState","render","id","title","created","twitterName","articleUrl","content","props","propTypes","oneOf","number","isRequired","string","func","defaultProps","mapDispatchToProps","dispatch","itemType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Button from 'components/atoms/Button/Button';\nimport LinkIcon from 'assets/link.svg';\nimport { connect } from 'react-redux';\nimport { removeItem as removeItemAction } from 'actions';\n\nconst StyledWrapper = styled.div`\n  min-height: 380px;\n  box-shadow: 0 10px 30px -10px hsla(0,0%,0%,0.1);\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  display: grid;\n  grid-template-rows: 0.25fr 1fr;\n`;\n\nconst InnerWrapper = styled.div`\n  position: relative;\n  padding: 17px 30px 10px;\n  background-color: ${({ theme, cardType }) => (cardType ? theme[cardType] : 'white')};\n  :first-of-type{\n  z-index: 999;\n  }\n  \n  ${({ flex }) => flex && css`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between`};\n`;\n\nconst DateInfo = styled(Paragraph)`\nmargin: 0 0 5px;\nfont-weight: bold;\nfont-size: ${({ theme }) => theme.fontSize.xs};\n`;\n\nconst StyledHeading = styled(Heading)`\n  margin: 5px 0 0;\n`;\n\nconst SyledAvatar = styled.img`\n  position: absolute;\n  right:25px;\n  top: 25px;\n  height: 86px;\n  width: 86px;\n  border:5px solid ${({ theme }) => theme.twitters}; \n  border-radius: 50%;\n`;\n\nconst StyledLinkButton = styled.a`\n  display: block;\n  width: 47px;\n  height: 47px;\n  border-radius: 50px;\n  background: white url(${LinkIcon}) no-repeat;\n  background-size: 60%;\n  background-position: 50%;\n  position: absolute;\n  right:25px;\n  top: 25px;\n  transform: translateY(-15%);\n`;\n\nclass Card extends Component {\n  // eslint-disable-next-line react/state-in-constructor\n  state = {\n    redirect: false,\n  };\n\n  handleCardClick = () => this.setState({ redirect: true });\n\n  render() {\n    const { redirect } = this.state;\n\n    const {\n      // eslint-disable-next-line no-shadow,react/prop-types\n      id, cardType, title, created, twitterName, articleUrl, content, removeItem,\n    } = this.props;\n\n    if (redirect) {\n      return <Redirect to={`${cardType}/${id}`} />;\n    }\n\n    return (\n      <StyledWrapper onClick={this.handleCardClick}>\n        <InnerWrapper cardType={cardType}>\n          <StyledHeading>{title}</StyledHeading>\n          <DateInfo>{created}</DateInfo>\n          {cardType === 'twitters'\n          && <SyledAvatar src={`https://avatar.oxro.io/avatar.svg?name=${twitterName}`} />}\n          {cardType === 'articles' && <StyledLinkButton src={articleUrl} />}\n        </InnerWrapper>\n        <InnerWrapper flex>\n\n          <Paragraph>\n            {content}\n          </Paragraph>\n          <Button onClick={() => removeItem(cardType, id)} secondary>REMOVE</Button>\n        </InnerWrapper>\n      </StyledWrapper>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardType: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  created: PropTypes.string.isRequired,\n  twitterName: PropTypes.string,\n  articleUrl: PropTypes.string,\n  content: PropTypes.string.isRequired,\n  removeItem: PropTypes.func.isRequired,\n};\n\nCard.defaultProps = {\n  cardType: 'notes',\n  twitterName: null,\n  articleUrl: null,\n\n};\nconst mapDispatchToProps = (dispatch) => ({\n  removeItem: (itemType, id) => dispatch(removeItemAction(itemType, id)),\n});\nexport default connect(null, mapDispatchToProps)(Card);\n"]},"metadata":{},"sourceType":"module"}