{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marcinwrzos/Desktop/cra-new/src/templates/GridTemplate.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport UserPageTemplate from 'templates/UserPageTemplate';\nimport Input from 'components/atoms/Input/Input';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport withContext from '../hoc/withContext';\nimport plusIcon from \"../assets/plus.svg\";\nimport NewItemBar from '../components/organisms/NewItemBar/NewItemBar';\nconst StyledWrapper = styled.div`\n  position: relative;\n  padding: 25px 150px 25px 70px;\n`;\n_c = StyledWrapper;\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 85px;\n\n  @media (max-width: 1500px) {\n    grid-gap: 45px;\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: 1100px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c2 = StyledGrid;\nconst StyledPageHeader = styled.div`\n  margin: 25px 0 50px 0;\n`;\n_c3 = StyledPageHeader;\nconst StyledHeading = styled(Heading)`\n  margin: 25px 0 0 0;\n\n  ::first-letter {\n    text-transform: uppercase;\n  }\n`;\n_c4 = StyledHeading;\nconst StyledParagraph = styled(Paragraph)`\n  margin: 0;\n  font-weight: ${({\n  theme\n}) => theme.bold};\n`;\n_c5 = StyledParagraph;\nconst StyledButtonIcon = styled(ButtonIcon)`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  background-color:${({\n  theme,\n  activeColor\n}) => theme[activeColor]};\n  border-radius: 50%;\n  background-size: 40%;\n  z-index: 10000;\n`;\n_c6 = StyledButtonIcon;\n\nclass GridTemplate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isNewItemBarVisible: false\n    };\n\n    this.handleNewItemBarToggle = () => {\n      this.setState(prevState => ({\n        isNewItemBarVisible: !prevState.isNewItemBarVisible\n      }));\n    };\n  }\n\n  render() {\n    const {\n      children,\n      pageContext\n    } = this.props;\n    const {\n      isNewItemBarVisible\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(UserPageTemplate, {\n      children: /*#__PURE__*/_jsxDEV(StyledWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(StyledPageHeader, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            search: true,\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledHeading, {\n            big: true,\n            as: \"h1\",\n            children: pageContext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n            children: [\"6\", pageContext]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledGrid, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButtonIcon, {\n          onClick: this.handleNewItemBarToggle,\n          icon: plusIcon,\n          activeColor: pageContext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewItemBar, {\n          handleClose: this.handleNewItemBarToggle,\n          isVisible: isNewItemBarVisible\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nGridTemplate.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles'])\n};\nGridTemplate.defaultProps = {\n  pageContext: 'notes'\n};\nexport default _c7 = withContext(GridTemplate);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"StyledWrapper\");\n$RefreshReg$(_c2, \"StyledGrid\");\n$RefreshReg$(_c3, \"StyledPageHeader\");\n$RefreshReg$(_c4, \"StyledHeading\");\n$RefreshReg$(_c5, \"StyledParagraph\");\n$RefreshReg$(_c6, \"StyledButtonIcon\");\n$RefreshReg$(_c7, \"%default%\");","map":{"version":3,"sources":["/Users/marcinwrzos/Desktop/cra-new/src/templates/GridTemplate.js"],"names":["React","Component","PropTypes","styled","UserPageTemplate","Input","Heading","Paragraph","ButtonIcon","withContext","NewItemBar","StyledWrapper","div","StyledGrid","StyledPageHeader","StyledHeading","StyledParagraph","theme","bold","StyledButtonIcon","activeColor","GridTemplate","state","isNewItemBarVisible","handleNewItemBarToggle","setState","prevState","render","children","pageContext","props","plusIcon","propTypes","arrayOf","object","isRequired","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport UserPageTemplate from 'templates/UserPageTemplate';\nimport Input from 'components/atoms/Input/Input';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport withContext from '../hoc/withContext';\nimport plusIcon from '../assets/plus.svg';\nimport NewItemBar from '../components/organisms/NewItemBar/NewItemBar';\n\nconst StyledWrapper = styled.div`\n  position: relative;\n  padding: 25px 150px 25px 70px;\n`;\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 85px;\n\n  @media (max-width: 1500px) {\n    grid-gap: 45px;\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: 1100px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst StyledPageHeader = styled.div`\n  margin: 25px 0 50px 0;\n`;\n\nconst StyledHeading = styled(Heading)`\n  margin: 25px 0 0 0;\n\n  ::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nconst StyledParagraph = styled(Paragraph)`\n  margin: 0;\n  font-weight: ${({ theme }) => theme.bold};\n`;\n\nconst StyledButtonIcon = styled(ButtonIcon)`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  background-color:${({ theme, activeColor }) => theme[activeColor]};\n  border-radius: 50%;\n  background-size: 40%;\n  z-index: 10000;\n`;\n\nclass GridTemplate extends Component {\n  // eslint-disable-next-line react/state-in-constructor\n  state = {\n    isNewItemBarVisible: false,\n  };\n\n  handleNewItemBarToggle = () => {\n    this.setState((prevState) => ({\n      isNewItemBarVisible: !prevState.isNewItemBarVisible,\n    }));\n  };\n\n  render() {\n    const { children, pageContext } = this.props;\n    const { isNewItemBarVisible } = this.state;\n    return (\n      <UserPageTemplate>\n        <StyledWrapper>\n          <StyledPageHeader>\n            <Input search placeholder=\"Search\" />\n            <StyledHeading big as=\"h1\">\n              {pageContext}\n            </StyledHeading>\n            <StyledParagraph>\n              6\n              {pageContext}\n            </StyledParagraph>\n          </StyledPageHeader>\n          <StyledGrid>{children}</StyledGrid>\n          <StyledButtonIcon\n            onClick={this.handleNewItemBarToggle}\n            icon={plusIcon}\n            activeColor={pageContext}\n          />\n          <NewItemBar handleClose={this.handleNewItemBarToggle} isVisible={isNewItemBarVisible} />\n        </StyledWrapper>\n      </UserPageTemplate>\n    );\n  }\n}\n\nGridTemplate.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n};\n\nGridTemplate.defaultProps = {\n  pageContext: 'notes',\n};\n\nexport default withContext(GridTemplate);\n"]},"metadata":{},"sourceType":"module"}